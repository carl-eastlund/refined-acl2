#lang mischief

(provide
  (struct-out ::)
  write-acl2
  make-progn*
  simple-progn
  make-encapsulate*
  simple-encapsulate
  make-must-succeed*
  simple-must-succeed
  make-local
  make-deflabel
  make-include-book
  make-skip-proofs
  make-defun
  make-defstub
  make-defthm
  make-quote
  make-if
  make-let
  make-app
  make-assert
  make-in-theory
  make-disable
  make-enable
  make-t
  make-nil
  portcullis-events
  portcullis-non-events
  dracula-package-imports
  acl2/c
  acl2-alpha/c
  standard-char?
  symbol-char?
  standard-char-set
  special-char-set
  symbol-char-set)

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Public definitions

(struct :: [package name] #:prefab)

(define portcullis-names
  '[STRING->KEYWORD
    STRING->SYMBOL
    SYMBOL?
    FIX-LIST
    STRING->LIST
    LIST->STRING])

(define portcullis-events
  '[(INCLUDE-BOOK "make-event/eval-check" #:DIR #:SYSTEM)
    (DEFPKG "DRACULA"
      (REMOVE T
        (REMOVE NIL
          (UNION-EQ (QUOTE [STRING->KEYWORD
                            STRING->SYMBOL
                            SYMBOL?
                            FIX-LIST
                            STRING->LIST
                            LIST->STRING])
            (UNION-EQ *ACL2-EXPORTS*
              *COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*)))))
    (DEFUND STRING->KEYWORD (X)
      (INTERN$ X "KEYWORD"))
    (DEFUND STRING->SYMBOL (X)
      (INTERN$ X "DRACULA"))
    (DEFUND SYMBOL? (X)
      (AND (SYMBOLP X)
        (EQ (STRING->SYMBOL (SYMBOL-NAME X)) X)))
    (DEFUND FIX-LIST (XS TAIL)
      (COND
        ((CONSP XS) (CONS (CAR XS) (FIX-LIST (CDR XS) TAIL)))
        (T TAIL)))
    (DEFUND STRING->LIST (X)
      (FIX-LIST (COERCE X (QUOTE LIST)) (QUOTE EMPTY)))
    (DEFUND LIST->STRING (X)
      (COERCE (FIX-LIST X NIL) (QUOTE STRING)))
    (SET-IGNORE-OK T)
    (SET-IRRELEVANT-FORMALS-OK T)])

(define portcullis-non-events
  '[(SET-GUARD-CHECKING T)])

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Contracts

(define (make-acl2/c #:name [name 'ACL2] #:other [other/c none/c])
  (make-flat-contract
    #:name name
    #:projection
    (lambda {blame}
      (lambda {x}
        (check-acl2! x other/c blame)
        x))))

(define (check-acl2! x other/c blame)
  (cond
    [(list? x)
     (for {[y (in-list x)] [i (in-naturals)]}
       (check-acl2! y other/c
         (blame-add-context blame
           (format "element ~a of" i))))]
    [(pair? x)
     (check-acl2! (car x) other/c
       (blame-add-context blame "the car of"))
     (check-acl2! (cdr x) other/c
       (blame-add-context blame "the cdr of"))]
    [(char? x)
     (unless (standard-char? x)
       (raise-blame-error blame x
         "non-standard character ~v"
         x))]
    [(string? x)
     (for {[c (in-string x)] [i (in-naturals)]}
       (check-acl2! c other/c
         (blame-add-context blame
           (format "character ~a of" i))))]
    [(symbol? x)
     (for {[c (in-string (symbol->string x))] [i (in-naturals)]}
       (unless (symbol-char? c)
         (raise-blame-error blame x
           "non-standard symbol ~v contains character ~v at index ~a"
           x
           c
           i)))]
    [(keyword? x)
     (check-acl2! (string->symbol (keyword->string x)) other/c
       (blame-add-context blame
         "the name of"))]
    [(::? x)
     (check-acl2! (::-package x) other/c
       (blame-add-context blame
         "the package of"))
     (check-acl2! (::-name x) other/c
       (blame-add-context blame
         "the name of"))]
    [(number? x)
     (unless (exact? x)
       (raise-blame-error blame x
         "inexact number ~v"
         x))]
    [(contract-first-order-passes? other/c x)
     (((contract-projection other/c) blame) x)]
    [else
     (raise-blame-error blame x
       "unrecognized ACL2 value")]))

(define acl2/c (make-acl2/c))
(define acl2-alpha/c
  (make-acl2/c
    #:name 'ACL2-alpha
    #:other syntax?))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Writing proof values

(define (write-acl2 pf [port (current-output-port)])
  (stylish-writeln pf port acl2-print-style))

(define (show-null null port st)
  (write-string "()" port))

(define (show-pair pair port st)

  (define (show-contents one two)
    (stylish-write one port st)
    (cond!
      [(null? two) (void)]
      [(pair? two)
       (stylish-print-separator port #:indent 2)
       (show-contents (car two) (cdr two))]
      [else
       (stylish-print-separator port #:indent 2)
       (write-string "." port)
       (stylish-print-separator port #:indent 2)
       (stylish-write two port st)]))

  (write-string "(" port)
  (show-contents (car pair) (cdr pair))
  (write-string ")" port))

(define (show-char ch port st)
  (unless (standard-char? ch)
    (error 'write-proof-obligation
      "Cannot write non-standard character ~v."
      ch))
  (write ch port))

(define (show-string str port st)
  (display #\" port)
  (for {[ch (in-string str)]}
    (unless (standard-char? ch)
      (error 'write-proof-obligation
        "Cannot write string ~v due to non-standard character ~v."
        str
        ch))
    (when (eqv? ch #\")
      (display #\\ port))
    (display ch port))
  (display #\" port))

(define (show-number num port st)
  (unless (exact? num)
    (error 'write-proof-obligation
      "Cannot write inexact number ~v."
      num))
  (cond!
    [(rational? num) (write num port)]
    [else
     (write-string "#C" port)
     (stylish-write
       (list
         (real-part num)
         (imag-part num))
       port
       st)]))

(define (show-keyword kwd port st)
  (define str (keyword->string kwd))
  (define sym (string->symbol str))
  (write-string ":" port)
  (show-symbol sym port st))

(define (show-symbol sym port st)
  (define escape? #false)
  (define str (symbol->string sym))
  (for {[ch (in-string str)]}
    (unless (standard-char? ch)
      (error 'write-proof-obligation
        "Cannot write symbol ~v due to non-standard character ~v."
        sym
        ch))
    (unless (symbol-char? ch)
      (set! escape? #true)))
  (when (memq? sym '(|| |.|))
    (set! escape? #true))
  (when (number? (string->number str))
    (set! escape? #true))
  (when (for/or {[ch (in-string str)]}
          (char-lower-case? ch))
    (set! escape? #true))
  (cond!
    [escape?
     (write-string "|" port)
     (for {[ch (in-string str)]}
       (when (memv? ch '(#\| #\\))
         (write-char #\\ port))
       (write-char ch port))
     (write-string "|" port)]
    [else (write-string str port)]))

(define (show-symbol/package sym port st)
  (match sym
    [(:: package name)
     (show-symbol package port st)
     (write-string "::" port)
     (show-symbol name port st)]))

(define acl2-print-style
  (extend-print-style empty-print-style
    (print-style-extension null? show-null)
    (print-style-extension pair? show-pair)
    (print-style-extension char? show-char)
    (print-style-extension string? show-string)
    (print-style-extension number? show-number)
    (print-style-extension keyword? show-keyword)
    (print-style-extension symbol? show-symbol)
    (print-style-extension ::? show-symbol/package)))

(define (standard-char? ch)
  (set-member? standard-char-set ch))

(define (symbol-char? ch)
  (set-member? symbol-char-set ch))

(define standard-char-set
  (seteqv
    ;; qwerty order w/o shift
    #||# #\` #\1 #\2 #\3 #\4 #\5 #\6 #\7 #\8 #\9 #\0 #\- #\=
    #||#      #\q #\w #\e #\r #\t #\y #\u #\i #\o #\p #\[ #\] #\\
    #||#       #\a #\s #\d #\f #\g #\h #\j #\k #\l #\; #\' #\newline
    #||#        #\z #\x #\c #\v #\b #\n #\m #\, #\. #\/
    #||#                #\space
    ;; QWERTY ORDER W/ SHIFT
    #||# #\~ #\! #\@ #\# #\$ #\% #\^ #\& #\* #\( #\) #\_ #\+
    #||#      #\Q #\W #\E #\R #\T #\Y #\U #\I #\O #\P #\{ #\} #\|
    #||#       #\A #\S #\D #\F #\G #\H #\J #\K #\L #\: #\" #\NEWLINE
    #||#        #\Z #\X #\C #\V #\B #\N #\M #\< #\> #\?
    #||#                #\SPACE))

(define special-char-set
  (seteqv
    ;; whitespace and comments
    #\newline #\space #\;
    ;; string/symbol delimiters/escapes
    #\" #\| #\\ #\:
    ;; dispatch character
    #\#
    ;; (quasi)quotation
    #\' #\` #\, #\@
    ;; s-expression delimiters
    #\( #\) #\[ #\] #\{ #\}))

(define symbol-char-set
  (set-subtract standard-char-set special-char-set))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Constructing ACL2 terms

(define (make-progn* . defs)
  (cond!
    [(empty? defs) '()]
    [(empty? (rest defs)) (list (first defs))]
    [else (list (simple-progn defs))]))

(define (simple-progn defs)
  `(#s{:: ACL2 PROGN} ,@defs))

(define (make-encapsulate* . defs)
  (cond!
    [(empty? defs) '()]
    [else (list (simple-encapsulate (map make-local defs)))]))

(define (simple-encapsulate defs)
  `(#s{:: ACL2 ENCAPSULATE} () ,@defs))

(define (make-local def)
  `(#s{:: ACL2 LOCAL} ,def))

(define (make-must-succeed* . defs)
  (match! defs
    ['() '()]
    [(list def) (list (simple-must-succeed def))]
    [_ (list (simple-must-succeed (simple-progn defs)))]))

(define (simple-must-succeed def)
  `(#s{:: ACL2 MUST-SUCCEED} ,def))

(define (make-deflabel name)
  `(#s{:: ACL2 DEFLABEL} ,name))

(define (make-include-book path options)
  `(#s{:: ACL2 INCLUDE-BOOK}
      ,path
      ,@options))

(define (make-skip-proofs def)
  `(#s{:: ACL2 SKIP-PROOFS} ,def))

(define (make-defun name formals measure/f body [goals/f '()])
  `(#s{:: ACL2 DEFUN} ,name ,formals
      ,@(if measure/f
          (list
            `(#s{:: ACL2 DECLARE}
                (#s{:: ACL2 XARGS}
                   #:MEASURE
                   ,measure/f)))
          '())
      ,body
      ,@(if goals/f
          (list '#:HINTS goals/f)
          '())))

(define (make-defstub name arity)
  `(#s{:: ACL2 DEFSTUB} ,name
      ,(for/list {[i (in-range arity)]}
         '#s{:: ACL2 *})
      #s{:: ACL2 =>}
      #s{:: ACL2 *}))

(define (make-defthm name body rules/f goals/f)
  `(#s{:: ACL2 DEFTHM} ,name
      ,body
      ,@(if rules/f
          (list '#:RULE-CLASSES rules/f)
          '())
      ,@(if goals/f
          (list '#:HINTS goals/f)
          '())))

(define (make-quote value)
  `(#s{:: ACL2 QUOTE} ,(datum-term value)))

(define (datum-term v)
  (match! v
    [(cons x y) (cons (datum-term x) (datum-term y))]
    ['() '#s{:: ACL2 EMPTY}]
    [#true (make-t)]
    [#false (make-nil)]
    [x x]))

(define (make-t) '#s{:: ACL2 T})
(define (make-nil) '#s{:: ACL2 NIL})

(define (make-if test then else)
  `(#s{:: ACL2 IF} ,test ,then ,else))

(define (make-let lhs rhs body)
  (cond!
    [(and (empty? lhs) (empty? rhs)) body]
    [else `(#s{:: ACL2 LET} ,(map list lhs rhs) ,body)]))

(define (make-app* fun . args)
  (make-app fun args))

(define (make-app fun args)
  `(,fun ,@args))

(define (make-assert body)
  `(#s{:: ACL2 ASSERT-EVENT} ,body))

(define (make-in-theory theory)
  `(#s{:: ACL2 IN-THEORY} ,theory))

(define (make-disable runes)
  `(#s{:: ACL2 DISABLE} ,@runes))

(define (make-enable runes)
  `(#s{:: ACL2 ENABLE} ,@runes))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; Package Imports (ACL2 3.6)

(define acl2-exports
  '[& &ALLOW-OTHER-KEYS &AUX &BODY &KEY
    &OPTIONAL &REST &WHOLE * *ACL2-EXPORTS*
    *COMMON-LISP-SPECIALS-AND-CONSTANTS*
    *COMMON-LISP-SYMBOLS-FROM-MAIN-LISP-PACKAGE*
    *MAIN-LISP-PACKAGE-NAME*
    *STANDARD-CHARS* *STANDARD-CI*
    *STANDARD-CO* *STANDARD-OI*
    + - / /= 1+ 1- 32-BIT-INTEGER-LISTP
    32-BIT-INTEGER-LISTP-FORWARD-TO-INTEGER-LISTP
    32-BIT-INTEGER-STACK
    32-BIT-INTEGER-STACK-LENGTH
    32-BIT-INTEGER-STACK-LENGTH1
    32-BIT-INTEGERP
    32-BIT-INTEGERP-FORWARD-TO-INTEGERP
    < <-ON-OTHERS <= = > >= ?-FN @ ABORT!
    ABS ACCUMULATED-PERSISTENCE ACL2-COUNT
    ACL2-INPUT-CHANNEL-PACKAGE ACL2-NUMBERP
    ACL2-ORACLE ACL2-OUTPUT-CHANNEL-PACKAGE
    ACL2-PACKAGE ACONS
    ACTIVE-RUNEP ADD-BINOP ADD-DEFAULT-HINTS
    ADD-DEFAULT-HINTS! ADD-INVISIBLE-FNS
    ADD-MACRO-ALIAS ADD-NTH-ALIAS
    ADD-PAIR ADD-PAIR-PRESERVES-ALL-BOUNDP
    ADD-TIMERS ADD-TO-SET-EQ
    ADD-TO-SET-EQL ADD-TO-SET-EQUAL ALISTP
    ALISTP-FORWARD-TO-TRUE-LISTP ALL-BOUNDP
    ALL-BOUNDP-PRESERVES-ASSOC ALL-VARS
    ALL-VARS1 ALL-VARS1-LST ALPHA-CHAR-P
    ALPHA-CHAR-P-FORWARD-TO-CHARACTERP
    AND AND-MACRO
    APPEND AREF-32-BIT-INTEGER-STACK
    AREF-T-STACK AREF1 AREF2 ARGS
    ARRAY1P ARRAY1P-CONS ARRAY1P-FORWARD
    ARRAY1P-LINEAR ARRAY2P ARRAY2P-CONS
    ARRAY2P-FORWARD ARRAY2P-LINEAR
    ASET-32-BIT-INTEGER-STACK ASET-T-STACK
    ASET1 ASET2 ASH ASSERT$ ASSIGN ASSOC
    ASSOC-ADD-PAIR ASSOC-EQ ASSOC-EQ-EQUAL
    ASSOC-EQ-EQUAL-ALISTP ASSOC-EQUAL
    ASSOC-KEYWORD ASSOC-STRING-EQUAL ASSOC2
    ASSOCIATIVITY-OF-* ASSOCIATIVITY-OF-+
    ASSUME ATOM ATOM-LISTP
    ATOM-LISTP-FORWARD-TO-TRUE-LISTP
    BIG-CLOCK-ENTRY BIG-CLOCK-NEGATIVE-P
    BINARY-* BINARY-+ BINARY-APPEND
    BIND-FREE BINOP-TABLE BIT BOOLEAN-LISTP
    BOOLEAN-LISTP-CONS BOOLEAN-LISTP-FORWARD
    BOOLEAN-LISTP-FORWARD-TO-SYMBOL-LISTP
    BOOLEANP BOOLEANP-CHARACTERP
    BOOLEANP-COMPOUND-RECOGNIZER
    BOUNDED-INTEGER-ALISTP
    BOUNDED-INTEGER-ALISTP-FORWARD-TO-EQLABLE-ALISTP
    BOUNDED-INTEGER-ALISTP2
    BOUNDP-GLOBAL BOUNDP-GLOBAL1
    BRR BRR@ BUILD-STATE1 BUTLAST CAAAAR
    CAAADR CAAAR CAADAR CAADDR CAADR CAAR
    CADAAR CADADR CADAR CADDAR CADDDR CADDR
    CADR CAR CAR-CDR-ELIM CAR-CONS CASE
    CASE-LIST CASE-LIST-CHECK CASE-MATCH
    CASE-SPLIT CASE-TEST CBD CDAAAR CDAADR
    CDAAR CDADAR CDADDR CDADR CDAR CDDAAR
    CDDADR CDDAR CDDDAR CDDDDR CDDDR CDDR
    CDR CDR-CONS CDRN CEILING CERTIFY-BOOK
    CERTIFY-BOOK! CHAR CHAR-CODE
    CHAR-CODE-CODE-CHAR-IS-IDENTITY
    CHAR-CODE-LINEAR
    CHAR-DOWNCASE CHAR-EQUAL CHAR-UPCASE
    CHAR< CHAR<= CHAR> CHAR>= CHARACTER
    CHARACTER-LISTP CHARACTER-LISTP-APPEND
    CHARACTER-LISTP-COERCE
    CHARACTER-LISTP-FORWARD-TO-EQLABLE-LISTP
    CHARACTER-LISTP-REMOVE-DUPLICATES-EQL
    CHARACTER-LISTP-REVAPPEND
    CHARACTER-LISTP-STRING-DOWNCASE-1
    CHARACTER-LISTP-STRING-UPCASE1-1
    CHARACTERP CHARACTERP-CHAR-DOWNCASE
    CHARACTERP-CHAR-UPCASE CHARACTERP-NTH
    CHARACTERP-PAGE CHARACTERP-RUBOUT
    CHARACTERP-TAB CHECK-VARS-NOT-FREE
    CHECKPOINT-FORCED-GOALS
    CLAUSE CLEAR-HASH-TABLES
    CLEAR-MEMOIZE-TABLE CLEAR-MEMOIZE-TABLES
    CLOSE-INPUT-CHANNEL CLOSE-OUTPUT-CHANNEL
    CLOSE-TRACE-FILE CLOSURE CODE-CHAR
    CODE-CHAR-CHAR-CODE-IS-IDENTITY
    CODE-CHAR-TYPE COERCE COERCE-INVERSE-1
    COERCE-INVERSE-2 COERCE-OBJECT-TO-STATE
    COERCE-STATE-TO-OBJECT
    COMMUTATIVITY-OF-*
    COMMUTATIVITY-OF-+ COMP COMPLETION-OF-*
    COMPLETION-OF-+ COMPLETION-OF-<
    COMPLETION-OF-CAR COMPLETION-OF-CDR
    COMPLETION-OF-CHAR-CODE
    COMPLETION-OF-CODE-CHAR
    COMPLETION-OF-COERCE
    COMPLETION-OF-COMPLEX
    COMPLETION-OF-DENOMINATOR
    COMPLETION-OF-IMAGPART
    COMPLETION-OF-INTERN-IN-PACKAGE-OF-SYMBOL
    COMPLETION-OF-NUMERATOR
    COMPLETION-OF-REALPART
    COMPLETION-OF-SYMBOL-NAME
    COMPLETION-OF-SYMBOL-PACKAGE-NAME
    COMPLETION-OF-UNARY-/
    COMPLETION-OF-UNARY-MINUS
    COMPLEX COMPLEX-0 COMPLEX-DEFINITION
    COMPLEX-EQUAL COMPLEX-IMPLIES1
    COMPLEX-RATIONALP COMPRESS1 COMPRESS11
    COMPRESS2 COMPRESS21 COMPRESS211
    CONCATENATE COND COND-CLAUSESP
    COND-MACRO CONJUGATE CONS CONS-EQUAL
    CONS-SUBTREES CONSP CONSP-ASSOC
    CONSP-ASSOC-EQ CURRENT-PACKAGE
    CURRENT-THEORY CW CW-GSTACK
    DECLARE DECREMENT-BIG-CLOCK DEFABBREV
    DEFAULT DEFAULT-*-1 DEFAULT-*-2
    DEFAULT-+-1 DEFAULT-+-2 DEFAULT-<-1
    DEFAULT-<-2 DEFAULT-CAR DEFAULT-CDR
    DEFAULT-CHAR-CODE DEFAULT-COERCE-1
    DEFAULT-COERCE-2 DEFAULT-COERCE-3
    DEFAULT-COMPILE-FNS DEFAULT-COMPLEX-1
    DEFAULT-COMPLEX-2 DEFAULT-DEFUN-MODE
    DEFAULT-DEFUN-MODE-FROM-STATE
    DEFAULT-DENOMINATOR DEFAULT-IMAGPART
    DEFAULT-MEASURE-FUNCTION
    DEFAULT-NUMERATOR
    DEFAULT-REALPART DEFAULT-SYMBOL-NAME
    DEFAULT-SYMBOL-PACKAGE-NAME
    DEFAULT-UNARY-/ DEFAULT-UNARY-MINUS
    DEFAULT-VERIFY-GUARDS-EAGERNESS
    DEFAULT-WELL-FOUNDED-RELATION
    DEFAXIOM DEFCHOOSE DEFCONG
    DEFCONST DEFDOC DEFEQUIV DEFEVALUATOR
    DEFEXEC DEFINE-PC-ATOMIC-MACRO
    DEFINE-PC-HELP DEFINE-PC-MACRO DEFLABEL
    DEFMACRO DEFPKG DEFREFINEMENT DEFSTOBJ
    DEFSTUB DEFTHEORY DEFTHM DEFTHMD
    DEFTTAG DEFUN DEFUN-SK DEFUND DEFUNS
    DELETE-PAIR DENOMINATOR DIGIT-CHAR-P
    DIGIT-TO-CHAR DIMENSIONS DISABLE
    DISABLE-FORCING DISABLEDP DISTRIBUTIVITY
    DOC DOC! DOCS DOUBLE-REWRITE
    DUPLICATES E/D E0-ORD-< E0-ORDINALP
    EC-CALL EIGHTH ELIMINATE-DESTRUCTORS
    ELIMINATE-IRRELEVANCE
    ENABLE ENABLE-FORCING
    ENCAPSULATE ENDP EQ EQL EQLABLE-ALISTP
    EQLABLE-ALISTP-FORWARD-TO-ALISTP
    EQLABLE-LISTP
    EQLABLE-LISTP-FORWARD-TO-ATOM-LISTP
    EQLABLEP
    EQLABLEP-RECOG EQUAL EQUAL-CHAR-CODE
    ER ER-PROGN ER-PROGN-FN EVENP EVENS
    EVENT EXECUTABLE-COUNTERPART-THEORY
    EXPLODE-ATOM
    EXPLODE-NONNEGATIVE-INTEGER EXPT
    EXPT-TYPE-PRESCRIPTION-NON-ZERO-BASE
    EXTEND-32-BIT-INTEGER-STACK
    EXTEND-T-STACK
    EXTEND-WORLD EXTRA-INFO FAST-ALIST-LEN
    FAST-ALIST-LEN-ACC FERTILIZE
    FGETPROP FIFTH FILE-CLOCK FILE-CLOCK-P
    FILE-CLOCK-P-FORWARD-TO-INTEGERP
    FIRST FIRST-N-AC FIX FIX-TRUE-LIST
    FLOOR FLUSH-HONS-GET-HASH-TABLE-LINK
    FMS FMT FMT-TO-COMMENT-WINDOW
    FMT1 FORCE FOURTH FUNCTION-SYMBOLP
    FUNCTION-THEORY GENERALIZE GET-GLOBAL
    GET-TIMER GETPROP-DEFAULT GETPROPS
    GETPROPS1 GLOBAL-TABLE GLOBAL-TABLE-CARS
    GLOBAL-TABLE-CARS1 GLOBAL-VAL GOOD-BYE
    GRANULARITY GROUND-ZERO HARD-ERROR
    HAS-PROPSP HAS-PROPSP1 HEADER HELP HIDE
    HONS HONS-ACONS HONS-ACONS! HONS-COPY
    HONS-EQUAL HONS-GET HONS-GET-FN-DO-HOPY
    HONS-GET-FN-DO-NOT-HOPY
    HONS-SHRINK-ALIST HONS-SHRINK-ALIST!
    I-AM-HERE ID IDATES IDENTITY
    IF IF* IFF IFF-IMPLIES-EQUAL-IMPLIES-1
    IFF-IMPLIES-EQUAL-IMPLIES-2
    IFF-IMPLIES-EQUAL-NOT
    IFF-IS-AN-EQUIVALENCE IFIX
    IGNORE ILLEGAL IMAGPART IMAGPART-COMPLEX
    IMMEDIATE-FORCE-MODEP IMPLIES
    IMPROPER-CONSP IN-ARITHMETIC-THEORY
    IN-PACKAGE IN-THEORY INCLUDE-BOOK
    INCOMPATIBLE INCREMENT-TIMER
    INDUCT INT= INTEGER INTEGER-0 INTEGER-1
    INTEGER-ABS INTEGER-IMPLIES-RATIONAL
    INTEGER-LENGTH INTEGER-LISTP
    INTEGER-LISTP-FORWARD-TO-RATIONAL-LISTP
    INTEGER-STEP INTEGERP INTERN
    INTERN$ INTERN-IN-PACKAGE-OF-SYMBOL
    INTERN-IN-PACKAGE-OF-SYMBOL-SYMBOL-NAME
    INTERSECTION-EQ
    INTERSECTION-THEORIES INTERSECTP-EQ
    INTERSECTP-EQUAL INVERSE-OF-*
    INVERSE-OF-+ INVISIBLE-FNS-TABLE
    KEYWORD-PACKAGE KEYWORD-VALUE-LISTP
    KEYWORD-VALUE-LISTP-ASSOC-KEYWORD
    KEYWORD-VALUE-LISTP-FORWARD-TO-TRUE-LISTP
    KEYWORDP KEYWORDP-FORWARD-TO-SYMBOLP
    KNOWN-PACKAGE-ALIST KNOWN-PACKAGE-ALISTP
    KNOWN-PACKAGE-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP
    LAMBDA
    LAST LD LD-ERROR-ACTION LD-ERROR-TRIPLES
    LD-KEYWORD-ALIASES LD-POST-EVAL-PRINT
    LD-PRE-EVAL-FILTER LD-PRE-EVAL-PRINT
    LD-PROMPT LD-QUERY-CONTROL-ALIST
    LD-REDEFINITION-ACTION LD-SKIP-PROOFSP
    LD-VERBOSE LEGAL-CASE-CLAUSESP
    LEN LEN-UPDATE-NTH LENGTH LET* LIST
    LIST* LIST*-MACRO LIST-ALL-PACKAGE-NAMES
    LIST-ALL-PACKAGE-NAMES-LST
    LIST-MACRO LISTP LOCAL LOGAND
    LOGANDC1 LOGANDC2 LOGBITP LOGCOUNT
    LOGEQV LOGIC LOGIOR LOGNAND LOGNOR
    LOGNOT LOGORC1 LOGORC2 LOGTEST LOGXOR
    LOWER-CASE-P LOWER-CASE-P-CHAR-DOWNCASE
    LOWER-CASE-P-FORWARD-TO-ALPHA-CHAR-P
    LOWEST-TERMS LP MACRO-ALIASES
    MAIN-TIMER MAIN-TIMER-TYPE-PRESCRIPTION
    MAKE-CHARACTER-LIST
    MAKE-CHARACTER-LIST-MAKE-CHARACTER-LIST
    MAKE-EVENT MAKE-FMT-BINDINGS
    MAKE-INPUT-CHANNEL MAKE-LIST
    MAKE-LIST-AC MAKE-MV-NTHS MAKE-ORD
    MAKE-OUTPUT-CHANNEL MAKE-VAR-LST
    MAKE-VAR-LST1 MAKUNBOUND-GLOBAL
    MAX MAXIMUM-LENGTH MAY-NEED-SLASHES
    MBE MBT MEMBER MEMBER-EQ
    MEMBER-EQUAL MEMBER-SYMBOL-NAME
    MEMOIZE MEMOIZE-LET MEMOIZE-OFF
    MEMOIZE-ON MFC MIN MINIMAL-THEORY
    MINUSP MOD MONITOR MONITORED-RUNES
    MORE MORE! MORE-DOC MUTUAL-RECURSION
    MUTUAL-RECURSION-GUARDP MV
    MV-LET MV-NTH NATP NEEDS-SLASHES NEWLINE
    NFIX NIL NIL-IS-NOT-CIRCULAR NINTH
    NO-DUPLICATESP NO-DUPLICATESP-EQUAL
    NONNEGATIVE-INTEGER-QUOTIENT
    NONNEGATIVE-PRODUCT NONZERO-IMAGPART
    NOT NQTHM-TO-ACL2 NTH NTH-0-CONS
    NTH-0-READ-RUN-TIME-TYPE-PRESCRIPTION
    NTH-ADD1 NTH-ALIASES NTH-UPDATE-NTH
    NTHCDR NULL NUMBER-SUBTREES
    NUMERATOR O-FINP O-FIRST-COEFF
    O-FIRST-EXPT O-INFP O-P O-RST O<
    O<= O> O>= OBSERVATION ODDP ODDS OK-IF
    OOPS OPEN-CHANNEL-LISTP OPEN-CHANNEL1
    OPEN-CHANNEL1-FORWARD-TO-TRUE-LISTP-AND-CONSP
    OPEN-CHANNELS-P OPEN-CHANNELS-P-FORWARD
    OPEN-INPUT-CHANNEL
    OPEN-INPUT-CHANNEL-ANY-P
    OPEN-INPUT-CHANNEL-ANY-P1
    OPEN-INPUT-CHANNEL-P
    OPEN-INPUT-CHANNEL-P1
    OPEN-INPUT-CHANNELS
    OPEN-OUTPUT-CHANNEL OPEN-OUTPUT-CHANNEL!
    OPEN-OUTPUT-CHANNEL-ANY-P
    OPEN-OUTPUT-CHANNEL-ANY-P1
    OPEN-OUTPUT-CHANNEL-P
    OPEN-OUTPUT-CHANNEL-P1
    OPEN-OUTPUT-CHANNELS OPEN-TRACE-FILE
    OR OR-MACRO ORDERED-SYMBOL-ALISTP
    ORDERED-SYMBOL-ALISTP-ADD-PAIR
    ORDERED-SYMBOL-ALISTP-ADD-PAIR-FORWARD
    ORDERED-SYMBOL-ALISTP-FORWARD-TO-SYMBOL-ALISTP
    ORDERED-SYMBOL-ALISTP-GETPROPS
    ORDERED-SYMBOL-ALISTP-REMOVE-FIRST-PAIR
    OTHERWISE
    OUR-DIGIT-CHAR-P PAIRLIS$ PAIRLIS2 PAND
    PARGS PBT PC PCB PCB! PCS PE PEEK-CHAR$
    PF PL PLET PLUSP POP-TIMER POR POSITION
    POSITION-AC POSITION-EQ POSITION-EQ-AC
    POSITION-EQUAL POSITION-EQUAL-AC
    POSITIVE POSP POWER-EVAL PPROGN PR
    PR! PREPROCESS PRIN1$ PRIN1-WITH-SLASHES
    PRIN1-WITH-SLASHES1 PRINC$ PRINT-GV
    PRINT-OBJECT$ PRINT-RATIONAL-AS-DECIMAL
    PRINT-TIMER PROG2$ PROGN PROGRAM
    PROOF-TREE PROOFS-CO PROPER-CONSP
    PROPS PROVE PSEUDO-TERM-LISTP
    PSEUDO-TERM-LISTP-FORWARD-TO-TRUE-LISTP
    PSEUDO-TERMP PSTACK
    PUFF PUFF* PUSH-TIMER PUSH-UNTOUCHABLE
    PUT-ASSOC-EQ PUT-ASSOC-EQUAL PUT-GLOBAL
    PUTPROP QUOTE QUOTEP R-EQLABLE-ALISTP
    RASSOC RASSOC-EQ RASSOC-EQUAL
    RATIO RATIONAL RATIONAL-IMPLIES1
    RATIONAL-IMPLIES2 RATIONAL-LISTP
    RATIONAL-LISTP-FORWARD-TO-TRUE-LISTP
    RATIONALP RATIONALP-* RATIONALP-+
    RATIONALP-EXPT-TYPE-PRESCRIPTION
    RATIONALP-IMPLIES-ACL2-NUMBERP
    RATIONALP-UNARY--
    RATIONALP-UNARY-/ READ-ACL2-ORACLE
    READ-ACL2-ORACLE-PRESERVES-STATE-P1
    READ-BYTE$ READ-CHAR$ READ-FILE-LISTP
    READ-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP
    READ-FILE-LISTP1
    READ-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP
    READ-FILES READ-FILES-P
    READ-FILES-P-FORWARD-TO-READ-FILE-LISTP
    READ-IDATE READ-OBJECT READ-RUN-TIME
    READ-RUN-TIME-PRESERVES-STATE-P1
    READABLE-FILE
    READABLE-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP
    READABLE-FILES READABLE-FILES-LISTP
    READABLE-FILES-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP
    READABLE-FILES-P
    READABLE-FILES-P-FORWARD-TO-READABLE-FILES-LISTP
    REAL/RATIONALP REALFIX REALPART
    REALPART-COMPLEX REALPART-IMAGPART-ELIM
    REBUILD REDEF REDEF! REDEF+ REM
    REMOVE REMOVE-BINOP REMOVE-DEFAULT-HINTS
    REMOVE-DEFAULT-HINTS!
    REMOVE-DUPLICATES REMOVE-DUPLICATES-EQL
    REMOVE-DUPLICATES-EQUAL
    REMOVE-EQ REMOVE-EQUAL
    REMOVE-FIRST-PAIR REMOVE-INVISIBLE-FNS
    REMOVE-MACRO-ALIAS REMOVE-NTH-ALIAS
    REMOVE-UNTOUCHABLE REMOVE1 REMOVE1-EQ
    REMOVE1-EQUAL RESET-LD-SPECIALS
    RESET-PREHISTORY REST RETRACT-WORLD
    RETRIEVE REVAPPEND REVERSE RFIX ROUND
    SATISFIES SECOND SET-BACKCHAIN-LIMIT
    SET-BODY SET-BOGUS-DEFUN-HINTS-OK
    SET-BOGUS-MUTUAL-RECURSION-OK
    SET-CASE-SPLIT-LIMITATIONS
    SET-CBD SET-CHECKPOINT-SUMMARY-LIMIT
    SET-COMPILE-FNS SET-DEBUGGER-ENABLE
    SET-DEFAULT-BACKCHAIN-LIMIT
    SET-DEFAULT-HINTS SET-DEFAULT-HINTS!
    SET-DIFFERENCE-EQ SET-DIFFERENCE-EQUAL
    SET-DIFFERENCE-THEORIES
    SET-ENFORCE-REDUNDANCY SET-EQUALP-EQUAL
    SET-GAG-MODE SET-GUARD-CHECKING
    SET-IGNORE-DOC-STRING-ERROR
    SET-IGNORE-OK SET-INHIBIT-OUTPUT-LST
    SET-INHIBIT-WARNINGS
    SET-INVISIBLE-FNS-TABLE
    SET-IRRELEVANT-FORMALS-OK
    SET-LD-KEYWORD-ALIASES
    SET-LD-REDEFINITION-ACTION
    SET-LD-SKIP-PROOFS
    SET-LD-SKIP-PROOFSP SET-LET*-ABSTRACTION
    SET-LET*-ABSTRACTIONP
    SET-MATCH-FREE-DEFAULT
    SET-MATCH-FREE-ERROR
    SET-MEASURE-FUNCTION SET-NON-LINEAR
    SET-NON-LINEARP SET-NU-REWRITER-MODE
    SET-PARALLEL-EVALUATION
    SET-PRINT-BASE SET-PRINT-CASE
    SET-PRINT-CLAUSE-IDS SET-RAW-MODE
    SET-RAW-MODE-ON! SET-RAW-PROOF-FORMAT
    SET-REWRITE-STACK-LIMIT
    SET-RULER-EXTENDERS
    SET-SAVED-OUTPUT SET-STATE-OK
    SET-TAINTED-OK SET-TAINTED-OKP
    SET-TIMER SET-TRACE-EVISC-TUPLE
    SET-VERIFY-GUARDS-EAGERNESS
    SET-W SET-WELL-FOUNDED-RELATION
    SEVENTH SGETPROP
    SHOW-ACCUMULATED-PERSISTENCE SHOW-BDD
    SHOW-BODIES SHRINK-32-BIT-INTEGER-STACK
    SHRINK-T-STACK
    SIGNED-BYTE SIGNUM SIMPLIFY
    SIXTH SKIP-PROOFS SOME-SLASHABLE
    STABLE-UNDER-SIMPLIFICATIONP
    STANDARD-CHAR STANDARD-CHAR-LISTP
    STANDARD-CHAR-LISTP-APPEND
    STANDARD-CHAR-LISTP-FORWARD-TO-CHARACTER-LISTP
    STANDARD-CHAR-P
    STANDARD-CHAR-P-NTH STANDARD-CO
    STANDARD-OI STANDARD-STRING-ALISTP
    STANDARD-STRING-ALISTP-FORWARD-TO-ALISTP
    START-PROOF-TREE
    STATE STATE-GLOBAL-LET*-CLEANUP
    STATE-GLOBAL-LET*-GET-GLOBALS
    STATE-GLOBAL-LET*-PUT-GLOBALS STATE-P
    STATE-P-IMPLIES-AND-FORWARD-TO-STATE-P1
    STATE-P1 STATE-P1-FORWARD
    STATE-P1-UPDATE-MAIN-TIMER
    STATE-P1-UPDATE-NTH-2-WORLD
    STOP-PROOF-TREE
    STRING STRING-APPEND STRING-APPEND-LST
    STRING-DOWNCASE STRING-DOWNCASE1
    STRING-EQUAL STRING-EQUAL1
    STRING-IS-NOT-CIRCULAR STRING-LISTP
    STRING-UPCASE STRING-UPCASE1
    STRING< STRING<-IRREFLEXIVE
    STRING<-L STRING<-L-ASYMMETRIC
    STRING<-L-IRREFLEXIVE
    STRING<-L-TRANSITIVE
    STRING<-L-TRICHOTOMY
    STRING<= STRING> STRING>=
    STRINGP STRINGP-SYMBOL-PACKAGE-NAME
    STRIP-CARS STRIP-CDRS SUBLIS
    SUBSEQ SUBSEQ-LIST SUBSETP SUBSETP-EQUAL
    SUBST SUBSTITUTE SUBSTITUTE-AC SUMMARY
    SYMBOL SYMBOL-< SYMBOL-<-ASYMMETRIC
    SYMBOL-<-IRREFLEXIVE SYMBOL-<-TRANSITIVE
    SYMBOL-<-TRICHOTOMY SYMBOL-ALISTP
    SYMBOL-ALISTP-FORWARD-TO-EQLABLE-ALISTP
    SYMBOL-DOUBLET-LISTP
    SYMBOL-EQUALITY SYMBOL-LISTP
    SYMBOL-LISTP-FORWARD-TO-TRUE-LISTP
    SYMBOL-NAME
    SYMBOL-NAME-INTERN-IN-PACKAGE-OF-SYMBOL
    SYMBOL-PACKAGE-NAME SYMBOLP
    SYMBOLP-INTERN-IN-PACKAGE-OF-SYMBOL
    SYNP SYNTAXP SYS-CALL
    SYS-CALL-STATUS T T-STACK T-STACK-LENGTH
    T-STACK-LENGTH1 TABLE TABLE-ALIST
    TAKE TENTH THE THE-ERROR THE-FIXNUM
    THE-FIXNUM! THEORY THEORY-INVARIANT
    THIRD THM TIME$ TIMER-ALISTP
    TIMER-ALISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-SYMBOL-ALISTP
    TOGGLE-PC-MACRO TRACE! TRACE$ TRACE*
    TRANS TRANS1 TRICHOTOMY TRUE-LIST-LISTP
    TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP
    TRUE-LIST-LISTP-FORWARD-TO-TRUE-LISTP-ASSOC-EQ
    TRUE-LISTP
    TRUE-LISTP-CADR-ASSOC-EQ-FOR-OPEN-CHANNELS-P
    TRUE-LISTP-UPDATE-NTH
    TRUNCATE TYPE TYPED-IO-LISTP
    TYPED-IO-LISTP-FORWARD-TO-TRUE-LISTP
    U UBT UBT! UNARY-- UNARY-/
    UNARY-FUNCTION-SYMBOL-LISTP UNICITY-OF-0
    UNICITY-OF-1 UNION-EQ UNION-EQUAL
    UNION-THEORIES UNIVERSAL-THEORY
    UNMEMOIZE UNMONITOR UNSAVE UNSIGNED-BYTE
    UNTRACE$ UPDATE-32-BIT-INTEGER-STACK
    UPDATE-ACL2-ORACLE
    UPDATE-ACL2-ORACLE-PRESERVES-STATE-P1
    UPDATE-BIG-CLOCK-ENTRY UPDATE-FILE-CLOCK
    UPDATE-GLOBAL-TABLE UPDATE-IDATES
    UPDATE-LIST-ALL-PACKAGE-NAMES-LST
    UPDATE-NTH UPDATE-OPEN-INPUT-CHANNELS
    UPDATE-OPEN-OUTPUT-CHANNELS
    UPDATE-READ-FILES
    UPDATE-T-STACK UPDATE-USER-STOBJ-ALIST
    UPDATE-USER-STOBJ-ALIST1
    UPDATE-WRITTEN-FILES
    UPPER-CASE-P UPPER-CASE-P-CHAR-UPCASE
    UPPER-CASE-P-FORWARD-TO-ALPHA-CHAR-P
    USER-STOBJ-ALIST USER-STOBJ-ALIST1
    VALUE-TRIPLE VERBOSE-PSTACK
    VERIFY VERIFY-GUARDS VERIFY-TERMINATION
    W WARNING! WITH-OUTPUT WORLD WORLDP
    WORLDP-FORWARD-TO-ASSOC-EQ-EQUAL-ALISTP
    WORMHOLE WORMHOLE1 WRITABLE-FILE-LISTP
    WRITABLE-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP
    WRITABLE-FILE-LISTP1
    WRITABLE-FILE-LISTP1-FORWARD-TO-TRUE-LISTP-AND-CONSP
    WRITE-BYTE$
    WRITEABLE-FILES WRITEABLE-FILES-P
    WRITEABLE-FILES-P-FORWARD-TO-WRITABLE-FILE-LISTP
    WRITTEN-FILE
    WRITTEN-FILE-FORWARD-TO-TRUE-LISTP-AND-CONSP
    WRITTEN-FILE-LISTP
    WRITTEN-FILE-LISTP-FORWARD-TO-TRUE-LIST-LISTP-AND-ALISTP
    WRITTEN-FILES WRITTEN-FILES-P
    WRITTEN-FILES-P-FORWARD-TO-WRITTEN-FILE-LISTP
    XARGS XXXJOIN ZERO ZEROP ZIP ZP])

(define common-lisp-symbols-from-main-lisp-package
  '[&ALLOW-OTHER-KEYS *PRINT-MISER-WIDTH*
    &AUX *PRINT-PPRINT-DISPATCH*
    &BODY *PRINT-PRETTY*
    &ENVIRONMENT *PRINT-RADIX*
    &KEY *PRINT-READABLY* &OPTIONAL
    *PRINT-RIGHT-MARGIN* &REST *QUERY-IO*
    &WHOLE *RANDOM-STATE* * *READ-BASE*
    ** *READ-DEFAULT-FLOAT-FORMAT*
    *** *READ-EVAL* *BREAK-ON-SIGNALS*
    *READ-SUPPRESS* *COMPILE-FILE-PATHNAME*
    *READTABLE* *COMPILE-FILE-TRUENAME*
    *STANDARD-INPUT* *COMPILE-PRINT*
    *STANDARD-OUTPUT* *COMPILE-VERBOSE*
    *TERMINAL-IO* *DEBUG-IO*
    *TRACE-OUTPUT* *DEBUGGER-HOOK*
    + *DEFAULT-PATHNAME-DEFAULTS*
    ++ *ERROR-OUTPUT* +++ *FEATURES*
    - *GENSYM-COUNTER* / *LOAD-PATHNAME*
    // *LOAD-PRINT* /// *LOAD-TRUENAME*
    /= *LOAD-VERBOSE* 1+ *MACROEXPAND-HOOK*
    1- *MODULES* < *PACKAGE*
    <= *PRINT-ARRAY* = *PRINT-BASE*
    > *PRINT-CASE* >= *PRINT-CIRCLE*
    ABORT *PRINT-ESCAPE* ABS *PRINT-GENSYM*
    ACONS *PRINT-LENGTH* ACOS *PRINT-LEVEL*
    ACOSH *PRINT-LINES* ADD-METHOD ADJOIN
    ATOM BOUNDP ADJUST-ARRAY BASE-CHAR
    BREAK ADJUSTABLE-ARRAY-P BASE-STRING
    BROADCAST-STREAM ALLOCATE-INSTANCE
    BIGNUM BROADCAST-STREAM-STREAMS
    ALPHA-CHAR-P BIT BUILT-IN-CLASS
    ALPHANUMERICP BIT-AND BUTLAST
    AND BIT-ANDC1 BYTE APPEND BIT-ANDC2
    BYTE-POSITION APPLY BIT-EQV BYTE-SIZE
    APROPOS BIT-IOR CAAAAR APROPOS-LIST
    BIT-NAND CAAADR AREF BIT-NOR
    CAAAR ARITHMETIC-ERROR BIT-NOT CAADAR
    ARITHMETIC-ERROR-OPERANDS BIT-ORC1
    CAADDR ARITHMETIC-ERROR-OPERATION
    BIT-ORC2 CAADR ARRAY BIT-VECTOR
    CAAR ARRAY-DIMENSION BIT-VECTOR-P
    CADAAR ARRAY-DIMENSION-LIMIT
    BIT-XOR CADADR ARRAY-DIMENSIONS
    BLOCK CADAR ARRAY-DISPLACEMENT
    BOOLE CADDAR ARRAY-ELEMENT-TYPE
    BOOLE-1 CADDDR ARRAY-HAS-FILL-POINTER-P
    BOOLE-2 CADDR ARRAY-IN-BOUNDS-P
    BOOLE-AND CADR ARRAY-RANK
    BOOLE-ANDC1 CALL-ARGUMENTS-LIMIT
    ARRAY-RANK-LIMIT BOOLE-ANDC2 CALL-METHOD
    ARRAY-ROW-MAJOR-INDEX BOOLE-C1
    CALL-NEXT-METHOD ARRAY-TOTAL-SIZE
    BOOLE-C2 CAR ARRAY-TOTAL-SIZE-LIMIT
    BOOLE-CLR CASE ARRAYP
    BOOLE-EQV CATCH ASH BOOLE-IOR CCASE
    ASIN BOOLE-NAND CDAAAR ASINH BOOLE-NOR
    CDAADR ASSERT BOOLE-ORC1 CDAAR ASSOC
    BOOLE-ORC2 CDADAR ASSOC-IF BOOLE-SET
    CDADDR ASSOC-IF-NOT BOOLE-XOR CDADR
    ATAN BOOLEAN CDAR ATANH BOTH-CASE-P
    CDDAAR CDDADR CLEAR-INPUT COPY-TREE
    CDDAR CLEAR-OUTPUT COS CDDDAR CLOSE COSH
    CDDDDR CLRHASH COUNT CDDDR CODE-CHAR
    COUNT-IF CDDR COERCE COUNT-IF-NOT
    CDR COMPILATION-SPEED CTYPECASE
    CEILING COMPILE DEBUG CELL-ERROR
    COMPILE-FILE DECF CELL-ERROR-NAME
    COMPILE-FILE-PATHNAME DECLAIM
    CERROR COMPILED-FUNCTION DECLARATION
    CHANGE-CLASS COMPILED-FUNCTION-P
    DECLARE CHAR COMPILER-MACRO DECODE-FLOAT
    CHAR-CODE COMPILER-MACRO-FUNCTION
    DECODE-UNIVERSAL-TIME
    CHAR-CODE-LIMIT COMPLEMENT DEFCLASS
    CHAR-DOWNCASE COMPLEX DEFCONSTANT
    CHAR-EQUAL COMPLEXP DEFGENERIC
    CHAR-GREATERP COMPUTE-APPLICABLE-METHODS
    DEFINE-COMPILER-MACRO
    CHAR-INT COMPUTE-RESTARTS
    DEFINE-CONDITION CHAR-LESSP
    CONCATENATE DEFINE-METHOD-COMBINATION
    CHAR-NAME CONCATENATED-STREAM
    DEFINE-MODIFY-MACRO CHAR-NOT-EQUAL
    CONCATENATED-STREAM-STREAMS
    DEFINE-SETF-EXPANDER CHAR-NOT-GREATERP
    COND DEFINE-SYMBOL-MACRO CHAR-NOT-LESSP
    CONDITION DEFMACRO CHAR-UPCASE CONJUGATE
    DEFMETHOD CHAR/= CONS DEFPACKAGE
    CHAR< CONSP DEFPARAMETER CHAR<=
    CONSTANTLY DEFSETF CHAR= CONSTANTP
    DEFSTRUCT CHAR> CONTINUE DEFTYPE
    CHAR>= CONTROL-ERROR DEFUN CHARACTER
    COPY-ALIST DEFVAR CHARACTERP COPY-LIST
    DELETE CHECK-TYPE COPY-PPRINT-DISPATCH
    DELETE-DUPLICATES CIS COPY-READTABLE
    DELETE-FILE CLASS COPY-SEQ DELETE-IF
    CLASS-NAME COPY-STRUCTURE DELETE-IF-NOT
    CLASS-OF COPY-SYMBOL DELETE-PACKAGE
    DENOMINATOR EQ DEPOSIT-FIELD
    EQL DESCRIBE EQUAL DESCRIBE-OBJECT
    EQUALP DESTRUCTURING-BIND
    ERROR DIGIT-CHAR ETYPECASE
    DIGIT-CHAR-P EVAL DIRECTORY EVAL-WHEN
    DIRECTORY-NAMESTRING EVENP DISASSEMBLE
    EVERY DIVISION-BY-ZERO EXP DO EXPORT
    DO* EXPT DO-ALL-SYMBOLS EXTENDED-CHAR
    DO-EXTERNAL-SYMBOLS FBOUNDP DO-SYMBOLS
    FCEILING DOCUMENTATION FDEFINITION
    DOLIST FFLOOR DOTIMES FIFTH DOUBLE-FLOAT
    FILE-AUTHOR DOUBLE-FLOAT-EPSILON
    FILE-ERROR DOUBLE-FLOAT-NEGATIVE-EPSILON
    FILE-ERROR-PATHNAME DPB FILE-LENGTH
    DRIBBLE FILE-NAMESTRING DYNAMIC-EXTENT
    FILE-POSITION ECASE FILE-STREAM
    ECHO-STREAM FILE-STRING-LENGTH
    ECHO-STREAM-INPUT-STREAM FILE-WRITE-DATE
    ECHO-STREAM-OUTPUT-STREAM
    FILL ED FILL-POINTER
    EIGHTH FIND ELT FIND-ALL-SYMBOLS
    ENCODE-UNIVERSAL-TIME FIND-CLASS
    END-OF-FILE FIND-IF ENDP FIND-IF-NOT
    ENOUGH-NAMESTRING FIND-METHOD
    ENSURE-DIRECTORIES-EXIST FIND-PACKAGE
    ENSURE-GENERIC-FUNCTION FIND-RESTART
    FIND-SYMBOL GET-INTERNAL-RUN-TIME
    FINISH-OUTPUT GET-MACRO-CHARACTER
    FIRST GET-OUTPUT-STREAM-STRING FIXNUM
    GET-PROPERTIES FLET GET-SETF-EXPANSION
    FLOAT GET-UNIVERSAL-TIME FLOAT-DIGITS
    GETF FLOAT-PRECISION GETHASH
    FLOAT-RADIX GO FLOAT-SIGN GRAPHIC-CHAR-P
    FLOATING-POINT-INEXACT HANDLER-BIND
    FLOATING-POINT-INVALID-OPERATION
    HANDLER-CASE FLOATING-POINT-OVERFLOW
    HASH-TABLE FLOATING-POINT-UNDERFLOW
    HASH-TABLE-COUNT FLOATP HASH-TABLE-P
    FLOOR HASH-TABLE-REHASH-SIZE FMAKUNBOUND
    HASH-TABLE-REHASH-THRESHOLD FORCE-OUTPUT
    HASH-TABLE-SIZE FORMAT HASH-TABLE-TEST
    FORMATTER HOST-NAMESTRING
    FOURTH IDENTITY FRESH-LINE
    IF FROUND IGNORABLE FTRUNCATE IGNORE
    FTYPE IGNORE-ERRORS FUNCALL IMAGPART
    FUNCTION IMPORT FUNCTION-KEYWORDS
    IN-PACKAGE FUNCTION-LAMBDA-EXPRESSION
    INCF FUNCTIONP INITIALIZE-INSTANCE
    GCD INLINE GENERIC-FUNCTION
    INPUT-STREAM-P GENSYM INSPECT
    GENTEMP INTEGER GET INTEGER-DECODE-FLOAT
    GET-DECODED-TIME INTEGER-LENGTH
    GET-DISPATCH-MACRO-CHARACTER
    INTEGERP GET-INTERNAL-REAL-TIME
    INTERACTIVE-STREAM-P
    INTERN LISP-IMPLEMENTATION-TYPE
    INTERNAL-TIME-UNITS-PER-SECOND
    LISP-IMPLEMENTATION-VERSION
    INTERSECTION LIST INVALID-METHOD-ERROR
    LIST* INVOKE-DEBUGGER
    LIST-ALL-PACKAGES INVOKE-RESTART
    LIST-LENGTH INVOKE-RESTART-INTERACTIVELY
    LISTEN ISQRT LISTP KEYWORD LOAD KEYWORDP
    LOAD-LOGICAL-PATHNAME-TRANSLATIONS
    LABELS LOAD-TIME-VALUE
    LAMBDA LOCALLY LAMBDA-LIST-KEYWORDS
    LOG LAMBDA-PARAMETERS-LIMIT
    LOGAND LAST LOGANDC1 LCM
    LOGANDC2 LDB LOGBITP LDB-TEST LOGCOUNT
    LDIFF LOGEQV LEAST-NEGATIVE-DOUBLE-FLOAT
    LOGICAL-PATHNAME
    LEAST-NEGATIVE-LONG-FLOAT
    LOGICAL-PATHNAME-TRANSLATIONS
    LEAST-NEGATIVE-NORMALIZED-DOUBLE-FLOAT
    LOGIOR
    LEAST-NEGATIVE-NORMALIZED-LONG-FLOAT
    LOGNAND
    LEAST-NEGATIVE-NORMALIZED-SHORT-FLOAT
    LOGNOR
    LEAST-NEGATIVE-NORMALIZED-SINGLE-FLOAT
    LOGNOT LEAST-NEGATIVE-SHORT-FLOAT
    LOGORC1 LEAST-NEGATIVE-SINGLE-FLOAT
    LOGORC2 LEAST-POSITIVE-DOUBLE-FLOAT
    LOGTEST LEAST-POSITIVE-LONG-FLOAT LOGXOR
    LEAST-POSITIVE-NORMALIZED-DOUBLE-FLOAT
    LONG-FLOAT
    LEAST-POSITIVE-NORMALIZED-LONG-FLOAT
    LONG-FLOAT-EPSILON
    LEAST-POSITIVE-NORMALIZED-SHORT-FLOAT
    LONG-FLOAT-NEGATIVE-EPSILON
    LEAST-POSITIVE-NORMALIZED-SINGLE-FLOAT
    LONG-SITE-NAME
    LEAST-POSITIVE-SHORT-FLOAT LOOP
    LEAST-POSITIVE-SINGLE-FLOAT LOOP-FINISH
    LENGTH LOWER-CASE-P LET MACHINE-INSTANCE
    LET* MACHINE-TYPE MACHINE-VERSION
    MASK-FIELD MACRO-FUNCTION
    MAX MACROEXPAND MEMBER MACROEXPAND-1
    MEMBER-IF MACROLET MEMBER-IF-NOT
    MAKE-ARRAY MERGE MAKE-BROADCAST-STREAM
    MERGE-PATHNAMES MAKE-CONCATENATED-STREAM
    METHOD MAKE-CONDITION METHOD-COMBINATION
    MAKE-DISPATCH-MACRO-CHARACTER
    METHOD-COMBINATION-ERROR
    MAKE-ECHO-STREAM METHOD-QUALIFIERS
    MAKE-HASH-TABLE MIN MAKE-INSTANCE
    MINUSP MAKE-INSTANCES-OBSOLETE
    MISMATCH MAKE-LIST MOD MAKE-LOAD-FORM
    MOST-NEGATIVE-DOUBLE-FLOAT
    MAKE-LOAD-FORM-SAVING-SLOTS
    MOST-NEGATIVE-FIXNUM
    MAKE-METHOD MOST-NEGATIVE-LONG-FLOAT
    MAKE-PACKAGE MOST-NEGATIVE-SHORT-FLOAT
    MAKE-PATHNAME MOST-NEGATIVE-SINGLE-FLOAT
    MAKE-RANDOM-STATE
    MOST-POSITIVE-DOUBLE-FLOAT
    MAKE-SEQUENCE MOST-POSITIVE-FIXNUM
    MAKE-STRING MOST-POSITIVE-LONG-FLOAT
    MAKE-STRING-INPUT-STREAM
    MOST-POSITIVE-SHORT-FLOAT
    MAKE-STRING-OUTPUT-STREAM
    MOST-POSITIVE-SINGLE-FLOAT
    MAKE-SYMBOL MUFFLE-WARNING
    MAKE-SYNONYM-STREAM MULTIPLE-VALUE-BIND
    MAKE-TWO-WAY-STREAM MULTIPLE-VALUE-CALL
    MAKUNBOUND MULTIPLE-VALUE-LIST
    MAP MULTIPLE-VALUE-PROG1
    MAP-INTO MULTIPLE-VALUE-SETQ MAPC
    MULTIPLE-VALUES-LIMIT MAPCAN NAME-CHAR
    MAPCAR NAMESTRING MAPCON NBUTLAST
    MAPHASH NCONC MAPL NEXT-METHOD-P
    MAPLIST NIL NINTERSECTION PACKAGE-ERROR
    NINTH PACKAGE-ERROR-PACKAGE
    NO-APPLICABLE-METHOD PACKAGE-NAME
    NO-NEXT-METHOD PACKAGE-NICKNAMES
    NOT PACKAGE-SHADOWING-SYMBOLS
    NOTANY PACKAGE-USE-LIST NOTEVERY
    PACKAGE-USED-BY-LIST NOTINLINE PACKAGEP
    NRECONC PAIRLIS NREVERSE PARSE-ERROR
    NSET-DIFFERENCE PARSE-INTEGER
    NSET-EXCLUSIVE-OR PARSE-NAMESTRING
    NSTRING-CAPITALIZE PATHNAME
    NSTRING-DOWNCASE PATHNAME-DEVICE
    NSTRING-UPCASE PATHNAME-DIRECTORY
    NSUBLIS PATHNAME-HOST NSUBST
    PATHNAME-MATCH-P NSUBST-IF PATHNAME-NAME
    NSUBST-IF-NOT PATHNAME-TYPE NSUBSTITUTE
    PATHNAME-VERSION NSUBSTITUTE-IF
    PATHNAMEP NSUBSTITUTE-IF-NOT
    PEEK-CHAR NTH PHASE NTH-VALUE PI NTHCDR
    PLUSP NULL POP NUMBER POSITION NUMBERP
    POSITION-IF NUMERATOR POSITION-IF-NOT
    NUNION PPRINT ODDP PPRINT-DISPATCH
    OPEN PPRINT-EXIT-IF-LIST-EXHAUSTED
    OPEN-STREAM-P PPRINT-FILL
    OPTIMIZE PPRINT-INDENT OR PPRINT-LINEAR
    OTHERWISE PPRINT-LOGICAL-BLOCK
    OUTPUT-STREAM-P PPRINT-NEWLINE
    PACKAGE PPRINT-POP PPRINT-TAB READ-CHAR
    PPRINT-TABULAR READ-CHAR-NO-HANG
    PRIN1 READ-DELIMITED-LIST
    PRIN1-TO-STRING READ-FROM-STRING
    PRINC READ-LINE PRINC-TO-STRING
    READ-PRESERVING-WHITESPACE
    PRINT READ-SEQUENCE PRINT-NOT-READABLE
    READER-ERROR PRINT-NOT-READABLE-OBJECT
    READTABLE PRINT-OBJECT
    READTABLE-CASE PRINT-UNREADABLE-OBJECT
    READTABLEP PROBE-FILE
    REAL PROCLAIM REALP PROG REALPART
    PROG* REDUCE PROG1 REINITIALIZE-INSTANCE
    PROG2 REM PROGN REMF PROGRAM-ERROR
    REMHASH PROGV REMOVE PROVIDE
    REMOVE-DUPLICATES PSETF REMOVE-IF
    PSETQ REMOVE-IF-NOT PUSH REMOVE-METHOD
    PUSHNEW REMPROP QUOTE RENAME-FILE
    RANDOM RENAME-PACKAGE RANDOM-STATE
    REPLACE RANDOM-STATE-P REQUIRE RASSOC
    REST RASSOC-IF RESTART RASSOC-IF-NOT
    RESTART-BIND RATIO RESTART-CASE
    RATIONAL RESTART-NAME RATIONALIZE RETURN
    RATIONALP RETURN-FROM READ REVAPPEND
    READ-BYTE REVERSE ROOM SIMPLE-BIT-VECTOR
    ROTATEF SIMPLE-BIT-VECTOR-P
    ROUND SIMPLE-CONDITION ROW-MAJOR-AREF
    SIMPLE-CONDITION-FORMAT-ARGUMENTS
    RPLACA SIMPLE-CONDITION-FORMAT-CONTROL
    RPLACD SIMPLE-ERROR
    SAFETY SIMPLE-STRING SATISFIES
    SIMPLE-STRING-P SBIT SIMPLE-TYPE-ERROR
    SCALE-FLOAT SIMPLE-VECTOR SCHAR
    SIMPLE-VECTOR-P SEARCH SIMPLE-WARNING
    SECOND SIN SEQUENCE SINGLE-FLOAT
    SERIOUS-CONDITION SINGLE-FLOAT-EPSILON
    SET SINGLE-FLOAT-NEGATIVE-EPSILON
    SET-DIFFERENCE
    SINH SET-DISPATCH-MACRO-CHARACTER
    SIXTH SET-EXCLUSIVE-OR
    SLEEP SET-MACRO-CHARACTER SLOT-BOUNDP
    SET-PPRINT-DISPATCH SLOT-EXISTS-P
    SET-SYNTAX-FROM-CHAR SLOT-MAKUNBOUND
    SETF SLOT-MISSING SETQ SLOT-UNBOUND
    SEVENTH SLOT-VALUE SHADOW SOFTWARE-TYPE
    SHADOWING-IMPORT SOFTWARE-VERSION
    SHARED-INITIALIZE SOME SHIFTF SORT
    SHORT-FLOAT SPACE SHORT-FLOAT-EPSILON
    SPECIAL SHORT-FLOAT-NEGATIVE-EPSILON
    SPECIAL-OPERATOR-P SHORT-SITE-NAME
    SPEED SIGNAL SQRT SIGNED-BYTE
    STABLE-SORT SIGNUM STANDARD SIMPLE-ARRAY
    STANDARD-CHAR SIMPLE-BASE-STRING
    STANDARD-CHAR-P STANDARD-CLASS
    SUBLIS STANDARD-GENERIC-FUNCTION SUBSEQ
    STANDARD-METHOD SUBSETP STANDARD-OBJECT
    SUBST STEP SUBST-IF STORAGE-CONDITION
    SUBST-IF-NOT STORE-VALUE SUBSTITUTE
    STREAM SUBSTITUTE-IF STREAM-ELEMENT-TYPE
    SUBSTITUTE-IF-NOT STREAM-ERROR
    SUBTYPEP STREAM-ERROR-STREAM
    SVREF STREAM-EXTERNAL-FORMAT
    SXHASH STREAMP SYMBOL
    STRING SYMBOL-FUNCTION STRING-CAPITALIZE
    SYMBOL-MACROLET STRING-DOWNCASE
    SYMBOL-NAME STRING-EQUAL SYMBOL-PACKAGE
    STRING-GREATERP SYMBOL-PLIST
    STRING-LEFT-TRIM SYMBOL-VALUE
    STRING-LESSP SYMBOLP STRING-NOT-EQUAL
    SYNONYM-STREAM STRING-NOT-GREATERP
    SYNONYM-STREAM-SYMBOL STRING-NOT-LESSP T
    STRING-RIGHT-TRIM TAGBODY STRING-STREAM
    TAILP STRING-TRIM TAN STRING-UPCASE
    TANH STRING/= TENTH STRING< TERPRI
    STRING<= THE STRING= THIRD STRING>
    THROW STRING>= TIME STRINGP TRACE
    STRUCTURE TRANSLATE-LOGICAL-PATHNAME
    STRUCTURE-CLASS
    TRANSLATE-PATHNAME STRUCTURE-OBJECT
    TREE-EQUAL STYLE-WARNING TRUENAME
    TRUNCATE VALUES-LIST TWO-WAY-STREAM
    VARIABLE TWO-WAY-STREAM-INPUT-STREAM
    VECTOR TWO-WAY-STREAM-OUTPUT-STREAM
    VECTOR-POP TYPE VECTOR-PUSH TYPE-ERROR
    VECTOR-PUSH-EXTEND TYPE-ERROR-DATUM
    VECTORP TYPE-ERROR-EXPECTED-TYPE
    WARN TYPE-OF WARNING TYPECASE
    WHEN TYPEP WILD-PATHNAME-P UNBOUND-SLOT
    WITH-ACCESSORS UNBOUND-SLOT-INSTANCE
    WITH-COMPILATION-UNIT
    UNBOUND-VARIABLE WITH-CONDITION-RESTARTS
    UNDEFINED-FUNCTION
    WITH-HASH-TABLE-ITERATOR
    UNEXPORT WITH-INPUT-FROM-STRING UNINTERN
    WITH-OPEN-FILE UNION WITH-OPEN-STREAM
    UNLESS WITH-OUTPUT-TO-STRING UNREAD-CHAR
    WITH-PACKAGE-ITERATOR UNSIGNED-BYTE
    WITH-SIMPLE-RESTART UNTRACE WITH-SLOTS
    UNUSE-PACKAGE WITH-STANDARD-IO-SYNTAX
    UNWIND-PROTECT WRITE
    UPDATE-INSTANCE-FOR-DIFFERENT-CLASS
    WRITE-BYTE
    UPDATE-INSTANCE-FOR-REDEFINED-CLASS
    WRITE-CHAR UPGRADED-ARRAY-ELEMENT-TYPE
    WRITE-LINE UPGRADED-COMPLEX-PART-TYPE
    WRITE-SEQUENCE UPPER-CASE-P
    WRITE-STRING USE-PACKAGE WRITE-TO-STRING
    USE-VALUE Y-OR-N-P USER-HOMEDIR-PATHNAME
    YES-OR-NO-P VALUES ZEROP])

(define dracula-package-imports
  (remove* '[T NIL]
    (remove-duplicates
      (append
        portcullis-names
        acl2-exports
        common-lisp-symbols-from-main-lisp-package))))
